---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: api-deployment
  namespace: default
  labels:
    app: smart-maintenance-api
    version: v1.0.0
spec:
  replicas: 3
  selector:
    matchLabels:
      app: smart-maintenance-api
  template:
    metadata:
      labels:
        app: smart-maintenance-api
        version: v1.0.0
    spec:
      containers:
        - name: smart-maintenance-api
          image: your-docker-repo/smart-maintenance-api:latest
          ports:
            - containerPort: 8000
              name: http
              protocol: TCP
          env:
            - name: DATABASE_URL
              valueFrom:
                secretKeyRef:
                  name: smart-maintenance-secrets
                  key: database-url
            - name: REDIS_URL
              valueFrom:
                secretKeyRef:
                  name: smart-maintenance-secrets
                  key: redis-url
            - name: MLFLOW_TRACKING_URI
              valueFrom:
                configMapKeyRef:
                  name: smart-maintenance-config
                  key: mlflow-tracking-uri
            - name: PYTHONPATH
              value: "/app"
            - name: DISABLE_CHROMADB
              value: "true"
          resources:
            requests:
              memory: "512Mi"
              cpu: "250m"
            limits:
              memory: "2Gi"
              cpu: "1000m"
          livenessProbe:
            httpGet:
              path: /health
              port: http
            initialDelaySeconds: 30
            periodSeconds: 10
            timeoutSeconds: 5
            failureThreshold: 3
          readinessProbe:
            httpGet:
              path: /health
              port: http
            initialDelaySeconds: 5
            periodSeconds: 5
            timeoutSeconds: 3
            failureThreshold: 3
          securityContext:
            allowPrivilegeEscalation: false
            runAsNonRoot: true
            runAsUser: 1000
            capabilities:
              drop:
                - ALL
          volumeMounts:
            - name: logs-volume
              mountPath: /app/logs
            - name: mlflow-data
              mountPath: /mlruns
      volumes:
        - name: logs-volume
          emptyDir: {}
        - name: mlflow-data
          persistentVolumeClaim:
            claimName: mlflow-data-pvc
      securityContext:
        fsGroup: 1000
      restartPolicy: Always

---
# Future Microservice Deployments - Uncomment when migration triggers are met

# apiVersion: apps/v1
# kind: Deployment
# metadata:
#   name: prediction-service-deployment
#   namespace: default
#   labels:
#     app: prediction-service
#     version: v1.0.0
# spec:
#   replicas: 2
#   selector:
#     matchLabels:
#       app: prediction-service
#   template:
#     metadata:
#       labels:
#         app: prediction-service
#         version: v1.0.0
#     spec:
#       containers:
#       - name: prediction-service
#         image: your-docker-repo/smart-maintenance-prediction:latest
#         ports:
#         - containerPort: 8001
#           name: http
#           protocol: TCP
#         env:
#         - name: MLFLOW_TRACKING_URI
#           valueFrom:
#             configMapKeyRef:
#               name: smart-maintenance-config
#               key: mlflow-tracking-uri
#         resources:
#           requests:
#             memory: "1Gi"
#             cpu: "500m"
#           limits:
#             memory: "4Gi"
#             cpu: "2000m"
#         livenessProbe:
#           httpGet:
#             path: /health
#             port: http
#           initialDelaySeconds: 30
#           periodSeconds: 10
#         readinessProbe:
#           httpGet:
#             path: /health
#             port: http
#           initialDelaySeconds: 5
#           periodSeconds: 5
#         securityContext:
#           allowPrivilegeEscalation: false
#           runAsNonRoot: true
#           runAsUser: 1000
#         volumeMounts:
#         - name: mlflow-data
#           mountPath: /mlruns
#       volumes:
#       - name: mlflow-data
#         persistentVolumeClaim:
#           claimName: mlflow-data-pvc

# ---
# apiVersion: apps/v1
# kind: Deployment
# metadata:
#   name: anomaly-service-deployment
#   namespace: default
#   labels:
#     app: anomaly-service
#     version: v1.0.0
# spec:
#   replicas: 2
#   selector:
#     matchLabels:
#       app: anomaly-service
#   template:
#     metadata:
#       labels:
#         app: anomaly-service
#         version: v1.0.0
#     spec:
#       containers:
#       - name: anomaly-service
#         image: your-docker-repo/smart-maintenance-anomaly:latest
#         ports:
#         - containerPort: 8002
#           name: http
#           protocol: TCP
#         env:
#         - name: DATABASE_URL
#           valueFrom:
#             secretKeyRef:
#               name: smart-maintenance-secrets
#               key: database-url
#         - name: REDIS_URL
#           valueFrom:
#             secretKeyRef:
#               name: smart-maintenance-secrets
#               key: redis-url
#         resources:
#           requests:
#             memory: "512Mi"
#             cpu: "250m"
#           limits:
#             memory: "2Gi"
#             cpu: "1000m"
#         livenessProbe:
#           httpGet:
#             path: /health
#             port: http
#           initialDelaySeconds: 30
#           periodSeconds: 10
#         readinessProbe:
#           httpGet:
#             path: /health
#             port: http
#           initialDelaySeconds: 5
#           periodSeconds: 5
#         securityContext:
#           allowPrivilegeEscalation: false
#           runAsNonRoot: true
#           runAsUser: 1000

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: smart-maintenance-config
  namespace: default
data:
  redis-url: "redis://redis-service:6379/0"
  mlflow-tracking-uri: "http://mlflow-service:5000"
  log-level: "INFO"
  pythonpath: "/app"
  disable-chromadb: "true"

---
apiVersion: v1
kind: Secret
metadata:
  name: smart-maintenance-secrets
  namespace: default
type: Opaque
data:
  # Base64 encoded values - replace with actual production values
  # postgresql://smart_user:strong_password@postgres-service:5432/smart_maintenance_db
  database-url: cG9zdGdyZXNxbDovL3NtYXJ0X3VzZXI6c3Ryb25nX3Bhc3N3b3JkQHBvc3RncmVzLXNlcnZpY2U6NTQzMi9zbWFydF9tYWludGVuYW5jZV9kYg==  # yamllint disable-line rule:line-length
  # redis://redis-service:6379/0
  redis-url: cmVkaXM6Ly9yZWRpcy1zZXJ2aWNlOjYzNzkvMA==

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: mlflow-data-pvc
  namespace: default
spec:
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: 10Gi
  storageClassName: standard
