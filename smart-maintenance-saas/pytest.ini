[pytest]
# File patterns to identify test files
python_files = tests.py test_*.py *_test.py
python_functions = test_*
python_classes = Test*

# Enable asyncio support for async tests
asyncio_mode = auto

# Define custom markers
markers =
    unit: marks tests as unit tests (fast, no external dependencies)
    integration: marks tests as integration tests (may require external services)
    db: marks tests that require database access
    api: marks tests that test API endpoints
    slow: marks tests that are known to be slow
    smoke: marks critical path functionality tests to be run in CI

# Test output formatting
log_cli = True
log_cli_level = INFO
log_cli_format = %(asctime)s [%(levelname)s] %(message)s (%(filename)s:%(lineno)s)
log_cli_date_format = %Y-%m-%d %H:%M:%S

# Verbose output
verbose = 2

# Show local variables on test failure
showlocals = True

# Display summary of skipped/xfailed tests
summary = True

# Fail if there are any warnings
filterwarnings =
    error
    ignore::DeprecationWarning
    ignore::UserWarning

# Maximum line length for command-line report
console_output_style = count

# Test collection
norecursedirs = .git .venv venv env .env build dist *.egg-info
