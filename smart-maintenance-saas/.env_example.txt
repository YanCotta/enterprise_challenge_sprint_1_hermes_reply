# ============================================================================
# Smart Maintenance SaaS - Cloud Deployment Configuration Template
# ============================================================================
# 
# This template is for deploying the system with CLOUD-HOSTED infrastructure:
# - TimescaleDB (Timescale Cloud)
# - Redis (Render or similar)
# - S3 (AWS) for MLflow artifacts
# - Streamlit Cloud (or similar) for UI hosting
# 
# DEPLOYMENT ARCHITECTURE:
# 1. Backend Services (Docker Compose): API, MLflow, optionally ML agents
# 2. Database: TimescaleDB Cloud (external)
# 3. Cache: Redis Cloud (external)
# 4. Storage: AWS S3 (external)
# 5. UI: Streamlit Cloud or VM with public access (external)
# 
# The UI will connect to the API via public URL once deployed.
# All services connect to the same cloud DB, Redis, and S3.
# ============================================================================

# --- CORE CONFIGURATION ---
ENV=production
LOG_LEVEL=INFO

# --- API / SECURITY ---
# Generate strong random keys for production:
# python -c "import secrets; print(secrets.token_urlsafe(32))"
API_KEY=your_production_api_key_here
SECRET_KEY=your_production_secret_key_here
JWT_SECRET=your_production_jwt_secret_here

# --- DATABASE (TIMESCALE CLOUD) ---
# Format for FastAPI (asyncpg driver):
# postgresql+asyncpg://user:password@host:port/database?ssl=require
# 
# Get your credentials from: https://console.cloud.timescale.com/
DATABASE_URL=postgresql+asyncpg://tsdbadmin:YOUR_PASSWORD@YOUR_HOST.tsdb.cloud.timescale.com:PORT/tsdb?ssl=require

# --- REDIS (CLOUD) ---
# Format for Redis cloud (with TLS):
# rediss://default:password@host:port
# 
# Providers: Render, Upstash, Redis Labs, AWS ElastiCache
REDIS_URL=rediss://default:YOUR_REDIS_PASSWORD@YOUR_REDIS_HOST:6379

# --- MLFLOW CONFIGURATION (CLOUD BACKEND) ---
# 
# MLflow server runs in Docker, but stores data in cloud services:

# 1. MLFLOW_TRACKING_URI: Where notebooks/scripts connect to log experiments
#    - For Docker Compose: http://mlflow:5000 (internal)
#    - For external access: http://YOUR_VM_IP:5000 or https://mlflow.yourdomain.com
MLFLOW_TRACKING_URI=http://mlflow:5000

# 2. MLFLOW_BACKEND_STORE_URI: Where MLflow stores experiment metadata
#    - Use same TimescaleDB as backend (NOTE: use "postgresql://" NOT "postgresql+asyncpg://")
MLFLOW_BACKEND_STORE_URI=postgresql://tsdbadmin:YOUR_PASSWORD@YOUR_HOST.tsdb.cloud.timescale.com:PORT/tsdb?sslmode=require

# 3. MLFLOW_ARTIFACT_ROOT: Where MLflow stores model artifacts (files)
#    - S3 bucket for production
MLFLOW_ARTIFACT_ROOT=s3://your-mlflow-artifacts-bucket

# --- AWS CREDENTIALS (FOR S3 ARTIFACTS) ---
# Create IAM user with S3 access: https://console.aws.amazon.com/iam/
# Attach policy: AmazonS3FullAccess (or create custom policy for your bucket)
AWS_ACCESS_KEY_ID=AKIA...
AWS_SECRET_ACCESS_KEY=your_aws_secret_access_key
AWS_DEFAULT_REGION=us-east-1

# --- UI CONFIGURATION ---
# API_BASE_URL: Where the UI connects to the backend
# 
# DEPLOYMENT SCENARIOS:
# 
# Scenario 1: Local Development (Docker Compose)
#   API_BASE_URL=http://api:8000
#   CLOUD_MODE=false
#   DEPLOYMENT_ENV=local
# 
# Scenario 2: UI on Streamlit Cloud, API on VM
#   API_BASE_URL=http://YOUR_VM_IP:8000  (or https://api.yourdomain.com)
#   CLOUD_MODE=true
#   DEPLOYMENT_ENV=production
# 
# Scenario 3: Both UI and API on same VM
#   API_BASE_URL=http://localhost:8000  (internal) or http://YOUR_VM_IP:8000 (external)
#   CLOUD_MODE=true
#   DEPLOYMENT_ENV=production

API_BASE_URL=http://api:8000
CLOUD_MODE=true
DEPLOYMENT_ENV=production

# --- OPTIONAL: MLFLOW CONFIGURATION FLAGS ---
# Uncomment to disable MLflow model loading (uses statistical fallbacks)
# DISABLE_MLFLOW_MODEL_LOADING=false

# Uncomment to disable ChromaDB for LearningAgent
# DISABLE_CHROMADB=false

# --- OPTIONAL: NOTIFICATIONS ---
# Slack webhook for notifications (optional)
# SLACK_WEBHOOK_URL=https://hooks.slack.com/services/YOUR/WEBHOOK/URL

# Email notifications (optional, disabled by default)
EMAIL_SMTP_HOST=smtp.example.com
EMAIL_SMTP_PORT=587
EMAIL_SMTP_TLS=true
EMAIL_SMTP_USER=disabled
EMAIL_SMTP_PASS=disabled
EMAIL_TO=disabled@example.com

# ============================================================================
# DEPLOYMENT CHECKLIST:
# ============================================================================
# 
# 1. Create TimescaleDB instance at https://console.cloud.timescale.com/
# 2. Create Redis instance (Render, Upstash, or similar)
# 3. Create AWS S3 bucket for MLflow artifacts
# 4. Create IAM user with S3 access, get access keys
# 5. Copy this file to .env and fill in all credentials
# 6. Deploy backend services (Docker Compose on VM)
# 7. Test API health endpoints
# 8. Deploy UI (Streamlit Cloud or VM)
# 9. Update API_BASE_URL in UI environment to point to deployed API
# 10. Run smoke tests from docs/V1_UNIFIED_DEPLOYMENT_CHECKLIST.md
# 
# ============================================================================