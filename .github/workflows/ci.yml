name: CI/CD Pipeline

on:
  push:
    branches: [ main ]
    tags: [ 'v*' ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    defaults:
      run:
        working-directory: ./smart-maintenance-saas
    
    steps:
    - uses: actions/checkout@v4

    - name: Set up Python 3.11
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'

    - name: Install Poetry
      uses: snok/install-poetry@v1
      with:
        version: 1.8.3

    - name: Configure Poetry
      run: |
        poetry config virtualenvs.create true
        poetry config virtualenvs.in-project true

    - name: Cache Poetry dependencies
      uses: actions/cache@v3
      with:
        path: ./smart-maintenance-saas/.venv
        key: poetry-${{ runner.os }}-${{ hashFiles('**/poetry.lock') }}
        restore-keys: |
          poetry-${{ runner.os }}-

    - name: Install dependencies
      run: poetry install

    - name: Run tests
      run: |
        export PYTHONPATH=.
        export ENV_FILE=.env.test
        export PYTEST_DIRECT_DB=1
        export PROTOCOL_BUFFERS_PYTHON_IMPLEMENTATION=python
        poetry run python -m pytest tests/unit/data/ tests/unit/core/ tests/test_settings.py tests/test_validation_changes.py -v

  build-and-push:
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' || startsWith(github.ref, 'refs/tags/')
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Free disk space
      run: |
        sudo rm -rf /usr/local/lib/android
        sudo rm -rf /usr/share/dotnet
        sudo rm -rf /opt/ghc
        sudo rm -rf /usr/local/share/boost
        sudo docker system prune -af
        df -h

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Log in to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Extract metadata
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: ${{ secrets.DOCKER_USERNAME }}/smart-maintenance-saas
        tags: |
          type=ref,event=branch
          type=ref,event=pr
          type=semver,pattern={{version}}
          type=semver,pattern={{major}}.{{minor}}
          type=raw,value=latest,enable={{is_default_branch}}
          type=sha,prefix={{branch}}-

    - name: Debug build context
      run: |
        echo "=== Root directory ==="
        ls -la
        echo "=== smart-maintenance-saas directory ==="
        ls -la ./smart-maintenance-saas/
        echo "=== Check for poetry files ==="
        ls -la ./smart-maintenance-saas/poetry.*
        echo "=== Check Dockerfile ==="
        head -n 40 ./smart-maintenance-saas/Dockerfile

    - name: Build and push Docker image
      uses: docker/build-push-action@v5
      with:
        context: ./smart-maintenance-saas
        file: ./smart-maintenance-saas/Dockerfile
        push: true
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
        cache-from: type=gha
        cache-to: type=gha,mode=max
        platforms: linux/amd64
